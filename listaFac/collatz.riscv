.data
mensagem_invalido: .asciz "entrada invalida.\n"
quebralinha: .asciz "\n"

.text
main: 
li a7, 5
ecall
#a0 tem a entrada do usuário
li t5, 1
ble a0, t5, entradainvalida #se entrada <=1
mv t0, a0 #move entrada em t0
li t2, 2 #adiciona 2 em t2
li t1, 0 #inicializa contador
jal conjecturaCollatz #chama função da conjectura

mv a0, t1 #move o contador no a0
li a7, 1 #print contador
ecall
la a0, quebralinha #adiciona quebra de linha
li a7, 4 # print quebralinha
ecall
li a7, 10 #finaliza programa
ecall


conjecturaCollatz:
#prologo

#corpo
#li t6, 1
#beq t0, t6, ret
rem t4, t0, t2 #aplica mod em t0, resultado em t4
bnez t4, conjecturaimpar #confere paridade
div t0, t0, t2 #adiciona em t0 o resultado da divisão por 2
addi t1, t1, 1

bgt t0, t5, conjecturaCollatz #se o numero for maior que 1, repete conjectura
ret



#epilogo

conjecturaimpar:
#prologo


#corpo
mv t3, t0 #salva temporariamente o valor de entrada em t3
slli t0, t0, 1 #mutiplica por 2
add t0, t3, t0 #adiciona entrada mais uma vez
#realiza mutiplicação por 3
addi t0, t0, 1 #adiciona 1

addi t1, t1, 1 #incrementa contador
j conjecturaCollatz #volta para o loop da conjectura


#epilogo

entradainvalida:
la a0, mensagem_invalido 
li a7, 4
ecall
li a7, 10
ecall

